{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","ErrorMessage","message","style","border","color","Message","Persons","persons","deletePerson","map","person","name","number","onClick","Input","value","onChange","e","target","Form","formProps","addPerson","setNewName","setNewNumber","newName","newNumber","onSubmit","type","App","useState","filter","setFilter","setPersons","setMessage","errorMsg","setErrorMsg","useEffect","fetchPersons","setTimeout","a","preventDefault","newPerson","existingPerson","p","editPerson","personService","result","data","response","error","window","confirm","console","log","filteredPersons","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59294393.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deletePerson,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nconst ErrorMessage = ({ message }) =>\n  message && (\n    <div style={{ border: \"3px solid red\", color: \"red\" }}>{message}</div>\n  );\nconst Message = ({ message }) =>\n  message && (\n    <div style={{ border: \"3px solid green\", color: \"green\" }}>{message}</div>\n  );\n\nconst Persons = ({ persons, deletePerson }) =>\n  persons.map((person) => {\n    return (\n      <div key={person.id}>\n        <b>{person.name}</b> {person.number}\n        <button onClick={() => deletePerson(person)}>poista</button>\n      </div>\n    );\n  });\n\nconst Input = ({ name, value, onChange }) => {\n  return (\n    <div>\n      {name}\n      <input value={value} onChange={(e) => onChange(e.target.value)} />\n    </div>\n  );\n};\n\nconst Form = ({\n  formProps: { addPerson, setNewName, setNewNumber, newName, newNumber },\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        <Input name=\"name\" value={newName} onChange={setNewName} />\n        <Input name=\"number\" value={newNumber} onChange={setNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst App = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  useEffect(() => {\n    fetchPersons();\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setErrorMsg(\"\");\n    }, 2000);\n  }, [errorMsg]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 2000);\n  }, [message]);\n\n  const addPerson = async (e) => {\n    try {\n      e.preventDefault();\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      };\n      const existingPerson = persons.filter((p) => p.name === newName)[0];\n      if (existingPerson) return editPerson(existingPerson.id, newPerson);\n      const result = await personService.create(newPerson);\n      setPersons([...persons, result.data]);\n      setNewName(\"\");\n      setNewNumber(\"\");\n      setTimeout();\n      setMessage(`${newName} added`);\n    } catch (err) {\n      setErrorMsg(err.response.data.error);\n    }\n  };\n\n  const editPerson = async (id, person) => {\n    try {\n      const confirmed = window.confirm(\n        `${person.name} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (confirmed) {\n        const result = await personService.update(id, person);\n        setNewName(\"\");\n        setNewNumber(\"\");\n        setPersons([...persons.filter((p) => p.id !== id), result.data]);\n        setMessage(`${person.name}'s number has been edited`);\n      }\n    } catch (err) {\n      setErrorMsg(`${person.name} not found`);\n    }\n  };\n\n  const deletePerson = async (person) => {\n    try {\n      const confirmed = window.confirm(`Delete ${person.name}?`);\n      if (confirmed) {\n        await personService.deletePerson(person.id);\n        setPersons(persons.filter((p) => p.id !== person.id));\n        setMessage(`${person.name} has been deleted`);\n      }\n    } catch (err) {\n      setErrorMsg(`${person.name} not found`);\n    }\n  };\n\n  const fetchPersons = async () => {\n    try {\n      const result = await personService.getAll();\n      setPersons(result.data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const filteredPersons = persons.filter((p) =>\n    p.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <ErrorMessage message={errorMsg} />\n      <Message message={message} />\n      <h2>Phonebook</h2>\n      <Input name=\"filter shown with\" value={filter} onChange={setFilter} />\n      <Form\n        formProps={{ setNewName, setNewNumber, addPerson, newName, newNumber }}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={filteredPersons} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}